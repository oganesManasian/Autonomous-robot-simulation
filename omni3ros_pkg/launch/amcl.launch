<launch>
	<!-- Run AMCL localization -->

  <!-- <arg name="map_file" default="$(find omni3ros_pkg)/maps/empty_room.yaml"/>  -->
  <arg name="world" default="big_room"/>

  <node name="map_server" pkg="map_server" type="map_server" args="$(find omni3ros_pkg)/maps/$(arg world).yaml" /> 

  <node pkg="amcl" type="amcl" name="amcl">
    <!-- Overall filter parameters -->

    <param name="min_particles" value="500"/>
    <param name="max_particles" value="5000"/>

    <param name="initial_pose_x" value="0.0"/> 
    <param name="initial_pose_y" value="0.0"/> 
    <param name="initial_pose_a" value="0.0"/>


    <!-- Exponential decay rate for the slow average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.001. -->
    <!-- <param name="recovery_alpha_slow" value="0.0"/> -->
    <!-- Exponential decay rate for the fast average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.1. -->
    <!-- <param name="recovery_alpha_fast" value="0.0"/> -->

    <!-- When set to true, will reduce the resampling rate when not needed and help avoid particle deprivation. 
    The resampling will only happen if the effective number of particles (N_eff = 1/(sum(k_i^2))) is lower 
    than half the current number of particles. Reference: Grisetti, Giorgio, Cyrill Stachniss, and Wolfram Burgard. 
    "Improved techniques for grid mapping with rao-blackwellized particle filters." IEEE transactions on Robotics 23.1 (2007): 34. -->
    <param name="selective_resampling" value="false"/>
  

    <!-- When set to true, AMCL will subscribe to the map topic rather than making a service call to receive its map. -->
    <param name="use_map_topic" value="false"/>

    <!-- Laser model  -->
    <!-- Minimum scan range to be considered; -1.0 will cause the laser's reported minimum range to be used. -->
    <!-- ~laser_min_range (double, default: -1.0) -->

    <!-- Maximum scan range to be considered; -1.0 will cause the laser's reported maximum range to be used. -->
    <!-- ~laser_max_range (double, default: -1.0) -->

    <!-- How many evenly-spaced beams in each scan to be used when updating the filter. -->
    <!-- ~laser_max_beams (int, default: 30) -->

    <!-- Mixture weight for the z_hit part of the model. -->
    <!-- ~laser_z_hit (double, default: 0.95) -->

    <!-- Mixture weight for the z_short part of the model. -->
    <!-- ~laser_z_short (double, default: 0.1) -->

    <!-- Mixture weight for the z_max part of the model. -->
    <!-- ~laser_z_max (double, default: 0.05) -->

    <!-- Mixture weight for the z_rand part of the model. -->
    <!-- ~laser_z_rand (double, default: 0.05) -->

    <!-- Standard deviation for Gaussian model used in z_hit part of the model. -->
    <!-- ~laser_sigma_hit (double, default: 0.2 meters) -->

    <!-- Exponential decay parameter for z_short part of model. -->
    <!-- ~laser_lambda_short (double, default: 0.1) -->

    <!-- Maximum distance to do obstacle inflation on map, for use in likelihood_field model. -->
    <!-- ~laser_likelihood_max_dist (double, default: 2.0 meters) -->

    <!-- Which model to use, either beam, likelihood_field, or likelihood_field_prob (same as likelihood_field but incorporates the beamskip feature, if enabled). -->
    <!-- ~laser_model_type (string, default: "likelihood_field") -->


    <!-- Odometry model -->
    <!-- If ~odom_model_type is "omni" then we use a custom model for an omni-directional base, 
    which uses odom_alpha1 through odom_alpha5. The meaning of the first four parameters is similar 
    to that for the "diff" model. The fifth parameter capture the tendency of the robot to translate 
    (without rotating) perpendicular to the observed direction of travel. -->
    <!-- Also, another bug was found but only fixed after Navigation 1.16, while the current release for 
    Kinetic is Navigation 1.14.1. This bug only affects robot with type "omni" and "omni-corrected", where 
    odom_alpha1 and odom_alpha4 are actually reversed. I.e. odom_alpha1 is for the translation odometry noise 
    from robot translation-al motion, and odom_alpha4 represents the odometry rotation noise from robot's rotation motion. -->
    <param name="odom_model_type" value="omni-corrected"/>

    <!-- Specifies the expected noise in odometry's rotation estimate from the rotational component of the robot's motion. -->
    <!-- ~odom_alpha1 (double, default: 0.2) -->

    <!-- Specifies the expected noise in odometry's rotation estimate from translational component of the robot's motion. -->
    <!-- ~odom_alpha2 (double, default: 0.2) -->

    <!-- Specifies the expected noise in odometry's translation estimate from the translational component of the robot's motion. -->
    <!-- ~odom_alpha3 (double, default: 0.2) -->

    <!-- Specifies the expected noise in odometry's translation estimate from the rotational component of the robot's motion. -->
    <!-- ~odom_alpha4 (double, default: 0.2) -->

    <!-- Translation-related noise parameter (only used if model is "omni"). -->
    <!-- ~odom_alpha5 (double, default: 0.2) -->

    <!-- Set this to false to prevent amcl from publishing the transform between the global frame and the odometry frame. -->
    <!-- Set to false if gmapping or robot_localization node is running -->
    <param name="tf_broadcast" value="true"/>

    <!-- Increase tolerance because the computer can get quite busy  -->
    <param name="transform_tolerance" value="1.0"/>

    <param name="global_frame_id" value="/map"/>
    <param name="base_frame_id" value="/base_link"/>
    <param name="odom_frame_id" value="/odom"/>
    
    
  </node>

 
</launch>